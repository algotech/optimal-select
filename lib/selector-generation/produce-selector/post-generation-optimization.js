"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shortenSelectorByShifting = shortenSelectorByShifting;

/**
* Tries to shorten the selector if possible, starting from left
* @param {String} initialSelector The generated selector to be improved
* @param {Object} root            Document root where to search for element
* @param {Element} element        The element to find a shorter selector for
*/
function shortenSelectorByShifting(initialSelector, root, element) {
  var shorterSelector = initialSelector.split(' ');
  var lastShifted = '';

  while (isSelectorValid(shorterSelector.join(' ')) && isSelectorUnique(root, shorterSelector, element)) {
    lastShifted = shorterSelector.shift();

    if (['>', '+', '~'].includes(shorterSelector[0])) {
      lastShifted += ' ' + shorterSelector.shift();
    }
  }

  var improvedSelector = "".concat(lastShifted, " ").concat(shorterSelector.join(' '));
  return improvedSelector.length < initialSelector.length ? improvedSelector : null;
}
/**
 * Checks if the provided selector matches only the desired element
 * @param {Object}  root         Document root where to search for element
 * @param {String}  selector     The generated selector to be improved
 * @param {Element}  element     The element to check with the selector
 */


var isSelectorUnique = function isSelectorUnique(root, selector, element) {
  return root.querySelector(selector.join(' ')) === element && root.querySelectorAll(selector.join(' ')).length === 1;
};
/**
* Checks if the selector is syntactically valid
* @param selector The selector to be checked
*/


function isSelectorValid(selector) {
  try {
    document.createDocumentFragment().querySelector(selector);
  } catch (e) {
    return false;
  }

  return true;
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbGVjdG9yLWdlbmVyYXRpb24vcHJvZHVjZS1zZWxlY3Rvci9wb3N0LWdlbmVyYXRpb24tb3B0aW1pemF0aW9uLmpzIl0sIm5hbWVzIjpbInNob3J0ZW5TZWxlY3RvckJ5U2hpZnRpbmciLCJpbml0aWFsU2VsZWN0b3IiLCJyb290IiwiZWxlbWVudCIsInNob3J0ZXJTZWxlY3RvciIsInNwbGl0IiwibGFzdFNoaWZ0ZWQiLCJpc1NlbGVjdG9yVmFsaWQiLCJqb2luIiwiaXNTZWxlY3RvclVuaXF1ZSIsInNoaWZ0IiwiaW5jbHVkZXMiLCJpbXByb3ZlZFNlbGVjdG9yIiwibGVuZ3RoIiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yIiwicXVlcnlTZWxlY3RvckFsbCIsImRvY3VtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSx5QkFBVCxDQUFtQ0MsZUFBbkMsRUFBb0RDLElBQXBELEVBQTBEQyxPQUExRCxFQUFtRTtBQUN4RSxNQUFJQyxlQUFlLEdBQUdILGVBQWUsQ0FBQ0ksS0FBaEIsQ0FBc0IsR0FBdEIsQ0FBdEI7QUFDQSxNQUFJQyxXQUFXLEdBQUcsRUFBbEI7O0FBRUEsU0FDRUMsZUFBZSxDQUFDSCxlQUFlLENBQUNJLElBQWhCLENBQXFCLEdBQXJCLENBQUQsQ0FBZixJQUNBQyxnQkFBZ0IsQ0FBQ1AsSUFBRCxFQUFPRSxlQUFQLEVBQXdCRCxPQUF4QixDQUZsQixFQUdFO0FBQ0FHLElBQUFBLFdBQVcsR0FBR0YsZUFBZSxDQUFDTSxLQUFoQixFQUFkOztBQUNBLFFBQUksQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0JDLFFBQWhCLENBQXlCUCxlQUFlLENBQUMsQ0FBRCxDQUF4QyxDQUFKLEVBQWtEO0FBQ2hERSxNQUFBQSxXQUFXLElBQUksTUFBTUYsZUFBZSxDQUFDTSxLQUFoQixFQUFyQjtBQUNEO0FBQ0Y7O0FBQ0QsTUFBTUUsZ0JBQWdCLGFBQU1OLFdBQU4sY0FBcUJGLGVBQWUsQ0FBQ0ksSUFBaEIsQ0FBcUIsR0FBckIsQ0FBckIsQ0FBdEI7QUFFQSxTQUFPSSxnQkFBZ0IsQ0FBQ0MsTUFBakIsR0FBMEJaLGVBQWUsQ0FBQ1ksTUFBMUMsR0FDTEQsZ0JBREssR0FFTCxJQUZGO0FBR0Q7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBLElBQU1ILGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQ1AsSUFBRCxFQUFPWSxRQUFQLEVBQWlCWCxPQUFqQjtBQUFBLFNBQ3ZCRCxJQUFJLENBQUNhLGFBQUwsQ0FBbUJELFFBQVEsQ0FBQ04sSUFBVCxDQUFjLEdBQWQsQ0FBbkIsTUFBMkNMLE9BQTNDLElBQ0FELElBQUksQ0FBQ2MsZ0JBQUwsQ0FBc0JGLFFBQVEsQ0FBQ04sSUFBVCxDQUFjLEdBQWQsQ0FBdEIsRUFBMENLLE1BQTFDLEtBQXFELENBRjlCO0FBQUEsQ0FBekI7QUFLQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsU0FBU04sZUFBVCxDQUF5Qk8sUUFBekIsRUFBbUM7QUFDakMsTUFBSTtBQUNGRyxJQUFBQSxRQUFRLENBQUNDLHNCQUFULEdBQWtDSCxhQUFsQyxDQUFnREQsUUFBaEQ7QUFDRCxHQUZELENBRUUsT0FBT0ssQ0FBUCxFQUFVO0FBQ1YsV0FBTyxLQUFQO0FBQ0Q7O0FBRUQsU0FBTyxJQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogVHJpZXMgdG8gc2hvcnRlbiB0aGUgc2VsZWN0b3IgaWYgcG9zc2libGUsIHN0YXJ0aW5nIGZyb20gbGVmdFxuKiBAcGFyYW0ge1N0cmluZ30gaW5pdGlhbFNlbGVjdG9yIFRoZSBnZW5lcmF0ZWQgc2VsZWN0b3IgdG8gYmUgaW1wcm92ZWRcbiogQHBhcmFtIHtPYmplY3R9IHJvb3QgICAgICAgICAgICBEb2N1bWVudCByb290IHdoZXJlIHRvIHNlYXJjaCBmb3IgZWxlbWVudFxuKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQgICAgICAgIFRoZSBlbGVtZW50IHRvIGZpbmQgYSBzaG9ydGVyIHNlbGVjdG9yIGZvclxuKi9cbmV4cG9ydCBmdW5jdGlvbiBzaG9ydGVuU2VsZWN0b3JCeVNoaWZ0aW5nKGluaXRpYWxTZWxlY3Rvciwgcm9vdCwgZWxlbWVudCkge1xuICBsZXQgc2hvcnRlclNlbGVjdG9yID0gaW5pdGlhbFNlbGVjdG9yLnNwbGl0KCcgJyk7XG4gIGxldCBsYXN0U2hpZnRlZCA9ICcnO1xuXG4gIHdoaWxlIChcbiAgICBpc1NlbGVjdG9yVmFsaWQoc2hvcnRlclNlbGVjdG9yLmpvaW4oJyAnKSkgJiZcbiAgICBpc1NlbGVjdG9yVW5pcXVlKHJvb3QsIHNob3J0ZXJTZWxlY3RvciwgZWxlbWVudClcbiAgKSB7XG4gICAgbGFzdFNoaWZ0ZWQgPSBzaG9ydGVyU2VsZWN0b3Iuc2hpZnQoKTtcbiAgICBpZiAoWyc+JywgJysnLCAnfiddLmluY2x1ZGVzKHNob3J0ZXJTZWxlY3RvclswXSkpIHtcbiAgICAgIGxhc3RTaGlmdGVkICs9ICcgJyArIHNob3J0ZXJTZWxlY3Rvci5zaGlmdCgpO1xuICAgIH1cbiAgfVxuICBjb25zdCBpbXByb3ZlZFNlbGVjdG9yID0gYCR7bGFzdFNoaWZ0ZWR9ICR7c2hvcnRlclNlbGVjdG9yLmpvaW4oJyAnKX1gO1xuXG4gIHJldHVybiBpbXByb3ZlZFNlbGVjdG9yLmxlbmd0aCA8IGluaXRpYWxTZWxlY3Rvci5sZW5ndGggP1xuICAgIGltcHJvdmVkU2VsZWN0b3IgOlxuICAgIG51bGw7XG59XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgcHJvdmlkZWQgc2VsZWN0b3IgbWF0Y2hlcyBvbmx5IHRoZSBkZXNpcmVkIGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSAgcm9vdCAgICAgICAgIERvY3VtZW50IHJvb3Qgd2hlcmUgdG8gc2VhcmNoIGZvciBlbGVtZW50XG4gKiBAcGFyYW0ge1N0cmluZ30gIHNlbGVjdG9yICAgICBUaGUgZ2VuZXJhdGVkIHNlbGVjdG9yIHRvIGJlIGltcHJvdmVkXG4gKiBAcGFyYW0ge0VsZW1lbnR9ICBlbGVtZW50ICAgICBUaGUgZWxlbWVudCB0byBjaGVjayB3aXRoIHRoZSBzZWxlY3RvclxuICovXG5jb25zdCBpc1NlbGVjdG9yVW5pcXVlID0gKHJvb3QsIHNlbGVjdG9yLCBlbGVtZW50KSA9PiAoXG4gIHJvb3QucXVlcnlTZWxlY3RvcihzZWxlY3Rvci5qb2luKCcgJykpID09PSBlbGVtZW50ICYmXG4gIHJvb3QucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvci5qb2luKCcgJykpLmxlbmd0aCA9PT0gMVxuKTtcblxuLyoqXG4qIENoZWNrcyBpZiB0aGUgc2VsZWN0b3IgaXMgc3ludGFjdGljYWxseSB2YWxpZFxuKiBAcGFyYW0gc2VsZWN0b3IgVGhlIHNlbGVjdG9yIHRvIGJlIGNoZWNrZWRcbiovXG5mdW5jdGlvbiBpc1NlbGVjdG9yVmFsaWQoc2VsZWN0b3IpIHtcbiAgdHJ5IHtcbiAgICBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cbiJdLCJmaWxlIjoic2VsZWN0b3ItZ2VuZXJhdGlvbi9wcm9kdWNlLXNlbGVjdG9yL3Bvc3QtZ2VuZXJhdGlvbi1vcHRpbWl6YXRpb24uanMifQ==
